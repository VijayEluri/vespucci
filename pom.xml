<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>de.tud.cs.st.opal</groupId>
	<artifactId>vmdb</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>${project.artifactId}</name>
	<description>Vespucci Model Database</description>
	<inceptionYear>2011</inceptionYear>

	<properties>
		<encoding>UTF-8</encoding>
		<scala.version>2.9.1</scala.version>
	</properties>

	<repositories>
		<repository>
			<id>scala-tools.org</id>
			<name>Scala-Tools Maven2 Repository</name>
			<url>http://scala-tools.org/repo-releases</url>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>scala-tools.org</id>
			<name>Scala-Tools Maven2 Repository</name>
			<url>http://scala-tools.org/repo-releases</url>
		</pluginRepository>
	</pluginRepositories>

	<dependencies>
		<!-- Scala Library -->
		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scala-library</artifactId>
			<version>${scala.version}</version>
		</dependency>

		<!-- Test-Dependencies -->
		<dependency>
			<groupId>org.scalatest</groupId>
			<artifactId>scalatest_${scala.version}</artifactId>
			<version>1.6.1</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.dorest</groupId>
			<artifactId>org.dorest</artifactId>
			<version>0.0.0-SNAPSHOT</version>
			<type>pom</type>
		</dependency>
		<dependency>
			<groupId>org.dorest</groupId>
			<artifactId>org.dorest.core</artifactId>
			<version>0.0.0-SNAPSHOT</version>
		</dependency>

		<!-- Database -->
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>1.3.161</version>
		</dependency>
		<dependency>
			<groupId>org.scalaquery</groupId>
			<artifactId>scalaquery_2.9.0-1</artifactId>
			<version>0.9.5</version>
		</dependency>

	</dependencies>

	<build>
		<sourceDirectory>src/main/scala</sourceDirectory>
		<testSourceDirectory>src/test/scala</testSourceDirectory>

		<plugins>
			<plugin>
				<groupId>org.scala-tools</groupId>
				<artifactId>maven-scala-plugin</artifactId>
				<version>2.15.2</version>

				<executions>
					<!-- Enables usage of the fast scala compiler (FSC) in the POM -->
					<execution>
						<id>compileExecution</id>
						<goals>
							<goal>cc</goal>
						</goals>
						<phase>compile</phase>
						<configuration>
							<useFsc>true</useFsc>
							<once>true</once>
						</configuration>
					</execution>

					<!-- FSC is not used for test compilation. It could be used however 
						by leveraging the compile goal with appropriate include / exclude settings -->
					<execution>
						<id>testCompileExecution</id>
						<goals>
							<goal>testCompile</goal>
						</goals>
					</execution>
				</executions>

				<configuration>
					<scalaVersion>${scala.version}</scalaVersion>
				</configuration>
			</plugin>

			<!-- This plugin must be installed manually. See: https://github.com/teigen/maven-scalatest-plugin 
				. I've used the fork: http://scalatest.googlecode.com/svn/branches/trenchguinea/maven-scalatest-plugin/ -->
			<plugin>
				<groupId>org.scalatest</groupId>
				<artifactId>maven-scalatest-plugin</artifactId>
				<version>1.0-SNAPSHOT</version>
				<!-- By attaching the plugin to the test-phase, it is run instead of 
					surefire-plugin when invoking "mvn test" -->
				<executions>
					<execution>
						<goals>
							<goal>test</goal>
						</goals>
					</execution>
				</executions>

			</plugin>

			<!-- Disable Surefire to avoid running tests twice when using scalatest-plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.8.1</version>
				<configuration>
					<skipTests>true</skipTests>
				</configuration>
			</plugin>

		</plugins>
	</build>
</project>
